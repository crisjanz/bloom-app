generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                      String        @id @default(uuid())
  name                    String
  slug                    String        @unique
  status    String   @default("DRAFT")
  description             String
  categoryId              String
  reportingCategoryId     String
  recipeNotes             String?
  productType             ProductType   @default(MAIN)
  inventoryMode           InventoryMode @default(OWN)
  visibility              Visibility    @default(BOTH)
  showOnHomepage          Boolean       @default(false)
  isSubscriptionAvailable Boolean       @default(false)
  isActive                Boolean       @default(true)
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt
  category            Category  @relation("ProductCategory", fields: [categoryId], references: [id])
  reportingCategory   ReportingCategory @relation("ProductReportingCategory", fields: [reportingCategoryId], references: [id])

  featuredAssetId   String?
  variants          ProductVariant[]
  tags              ProductTag[]
  addonGroups       ProductAddOnGroup[]
  bundleComponents  BundleItem[]        @relation("BundleParent")
  includedInBundles BundleItem[]        @relation("BundleChild")
}

model ProductVariant {
  id             String   @id @default(uuid())
  productId      String
  name           String
  sku            String   @unique
  price          Int
  discountPrice  Int?
  stockLevel     Int?
  trackInventory Boolean  @default(true)
  isDefault      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  product Product         @relation(fields: [productId], references: [id])
  options VariantOption[]
}

model ProductOption {
  id     String               @id @default(uuid())
  name   String
  values ProductOptionValue[]
}

model ProductOptionValue {
  id        String          @id @default(uuid())
  label     String
  optionId  String
  sortOrder Int             @default(0)
  option    ProductOption   @relation(fields: [optionId], references: [id])
  variants  VariantOption[]
}

model VariantOption {
  id            String             @id @default(uuid())
  variantId     String
  optionValueId String
  variant       ProductVariant     @relation(fields: [variantId], references: [id])
  optionValue   ProductOptionValue @relation(fields: [optionValueId], references: [id])
}

model BundleItem {
  id                 String @id @default(uuid())
  bundleProductId    String
  componentProductId String
  quantity           Int

  bundleProduct    Product @relation("BundleParent", fields: [bundleProductId], references: [id])
  componentProduct Product @relation("BundleChild", fields: [componentProductId], references: [id])
}

model AddOnGroup {
  id        String              @id @default(uuid())
  name      String
  isDefault Boolean             @default(false)
  addOns    AddOnProduct[]
  products  ProductAddOnGroup[] @relation("ProductToAddOnGroup")
}

model AddOnProduct {
  id             String @id @default(uuid())
  addonProductId String
  groupId        String

  group AddOnGroup @relation(fields: [groupId], references: [id])
}

model ProductAddOnGroup {
  id        String @id @default(uuid())
  productId String
  groupId   String

  product Product    @relation(fields: [productId], references: [id])
  group   AddOnGroup @relation("ProductToAddOnGroup", fields: [groupId], references: [id])
}

model Tag {
  id       String       @id @default(uuid())
  name     String       @unique
  products ProductTag[]
}

model ProductTag {
  id        String @id @default(uuid())
  productId String
  tagId     String

  product Product @relation(fields: [productId], references: [id])
  tag     Tag     @relation(fields: [tagId], references: [id])
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[] @relation("ProductCategory")
}

model ReportingCategory {
  id       String    @id @default(uuid())
  name     String    @unique
  products Product[] @relation("ProductReportingCategory")
}



enum ProductType {
  MAIN
  ADDON
  SERVICE
}

enum InventoryMode {
  NONE
  OWN
  BUNDLE
}

enum Visibility {
  ONLINE
  POS
  BOTH
}
